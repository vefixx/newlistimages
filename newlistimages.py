import nextcord
from nextcord.ext import commands
from data.database import database
from config.config import *
from nextcord.ui import Select, View
import os

class newlistimages(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.user_data = {}

    @nextcord.slash_command(description="–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–µ–¥–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫!")
    async def listimages(self, interaction: nextcord.Interaction):
        print(f'/newlistimages {interaction.user.id}')

        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""

        user = await database.getUser(interaction.user.id)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userid = interaction.user.id
        if BLOCKEDCOMMAND_NEWLISTIMAGES == 1:
            if user[0] not in ADMINS:
                print('–ù–µ –∞–¥–º–∏–Ω')
                embed = nextcord.Embed(
                    title=f'–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.\n\n {COMMENT}',
                    color=nextcord.Color.red())
                await interaction.response.send_message(embed=embed, ephemeral=True)
                return 0

        """–û—Å–Ω–æ–≤–æ–π –±–ª–æ–∫ –∫–æ–¥–∞"""

        all_user_images = await database.getImages(userid)  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –î–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–æ, –µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if all_user_images is None:
            embed = nextcord.Embed(
                title=f'–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫.\n\n–°–æ–∑–¥–∞–π—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π **/addimage**',
                color=nextcord.Color.dark_orange())
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return 0

        # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞, —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –Ω–µ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É, —á—Ç–æ–±—ã –µ–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.
        self.user_data[userid] = {}

        # –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º –Ω–∞—à–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ —Å–ø–∏—Å–æ–∫
        images_list = []
        for image in all_user_images:
            images_list.append(image[0])    #[0] - –≠—Ç–æ –∏–º—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫

        # –°–æ–∑–¥–∞–µ–º View –∏ —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –Ω–µ–≥–æ.
        self.view_select_images = View(timeout=None)  # –ó–∞–¥–∞–µ–º —Ç–∞–π–º–∞—É—Ç None, —á—Ç–æ–±—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–ª–æ –ø—Ä–æ–±–ª–µ–º

        """–°–æ–∑–¥–∞–Ω–∏–µ Select'–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
        #   Select –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏.
        self.select_images = Select(
            placeholder='–ö–∞—Ä—Ç–∏–Ω–∫–∏',
            options=[
                nextcord.SelectOption(label=imagename, value=imagename, emoji="üñºÔ∏è")
                for imagename in images_list
            ]
        )

        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ Select'–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫ View"""
        self.view_select_images.add_item(self.select_images)

        """–°–æ–∑–¥–∞–Ω–∏–µ View –¥–ª—è –∫–Ω–æ–ø–æ–∫"""
        self.view_buttons = View(timeout=None)  # –ó–∞–¥–∞–µ–º —Ç–∞–π–º–∞—É—Ç None, —á—Ç–æ–±—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–ª–æ –ø—Ä–æ–±–ª–µ–º

        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫"""
        self.button_delete = nextcord.ui.Button(label="–£–¥–∞–ª–∏—Ç—å", custom_id="deleteButton",
                                                style=nextcord.ButtonStyle.red)
        self.button_unload = nextcord.ui.Button(label="–í—ã–≥—Ä—É–∑–∏—Ç—å", custom_id="unloadButton",
                                                style=nextcord.ButtonStyle.blurple)

        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∫ View"""
        self.view_buttons.add_item(self.button_unload)
        self.view_buttons.add_item(self.button_delete)

        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ callback'–æ–≤ –∫ Select"""
        self.select_images.callback = self.callback_select_image

        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ callback'–æ–≤ –∫ –∫–Ω–æ–ø–∫–∞–º"""
        self.button_delete.callback = self.callback_delete_button


        """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—à–∏–º View –≥–¥–µ –µ—Å—Ç—å Select –≤—ã–±–æ—Ä –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
        embed = nextcord.Embed(
            title=f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É/–≥–∏—Ñ–∫—É',
            color=nextcord.Color.orange())

        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–º–∏—É–º"""

        leftslots = user[6]
        embed.add_field(name=f"–î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç: {leftslots}", value=f"", inline=False)
        ispremium = await database.isPremium(userid)
        if ispremium:
            timePremium = await database.getTimePremiumByUserid(userid)
            if timePremium == None:
                timePremium = 'UNLIMITED ‚àû'
            embed.set_footer(text=f"Premium üëë LVL {user[3]}. –ü—Ä–µ–º–∏—É–º –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è {timePremium}")
        else:
            embed.set_footer(text="Premium: –ù–µ –∞–∫—Ç–∏–≤–Ω–æ")

        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–º–∏—É–º"""

        await interaction.send(f"", view=self.view_select_images, ephemeral=True, embed=embed)




    """Callback'–∏ –¥–ª—è Select'–æ–≤ –∏ –∫–Ω–æ–ø–æ–∫"""
    async def callback_select_image(self, interaction):    # callback –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        await interaction.response.defer()      # –ß—Ç–æ–±—ã –Ω–µ –¥–æ–∂–∏–¥–∞—Ç—å—Å—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        selected_value = interaction.data['values'][0]      # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ Select'–µ
        userid = interaction.user.id

        #   –ó–∞–¥–∞–µ–º –Ω–∞—à–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –≤—ã–±—Ä–∞–ª
        self.user_data[userid]['select_image'] = selected_value

        """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (self.view_buttons) (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º)"""
        embed = nextcord.Embed(
            title=f'**{selected_value}**',
            color=nextcord.Color.orange())
        embed.add_field(name=f'–ù–∞–∑–≤–∞–Ω–∏–µ: **{selected_value}**', value='', inline=False)
        embed.add_field(name=f'–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: **–Ω–µ —É–∫–∞–∑–∞–Ω–∞**', value='', inline=False)      # –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è

        #   –û—Ç–ø—Ä–∞–≤–∫–∞
        await interaction.edit_original_message(content=f"", view=self.view_buttons, embed=embed)

    """Callback –¥–ª—è –∫–Ω–æ–ø–∫–∏"""
    async def callback_delete_button(self, interaction):
        await interaction.response.defer()  # –ß—Ç–æ–±—ã –Ω–µ –¥–æ–∂–∏–¥–∞—Ç—å—Å—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userid = interaction.user.id

        #   –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –¥–∞—Ç—ã, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        selected_image = self.user_data[userid]['select_image']

        """–ü—Ä–æ–∏–∑–≤–æ–¥–∏–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É —É–¥–∞–ª–µ–Ω–∏—è"""
        data = await database.delImage(name=selected_image, owner_id=interaction.user.id)


        """–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞"""
        #   –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
        user = await database.getUser(userid)

        #   –ü–æ–ª—É—á–∞–µ–º –µ–≥–æ –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–ª–æ—Ç–æ–≤
        leftImages = user[6]

        if data is not False:   # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —É–¥–∞–ª–∏–ª–∞—Å—å –ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∏–∑ –±–∞–∑—ã –∏–ª–∏ –Ω–µ—Ç
            await database.setleftImages(interaction.user.id, int(leftImages) + 1)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ +1 –∫ —Å–ª–æ—Ç—É –∫–∞—Ä—Ç–∏–Ω–æ–∫
            # –£–¥–∞–ª—è–µ–º –∏–∑ –ø–∞–ø–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É
            try:
                os.remove(f'data/images/{selected_image}.jpg')
            except:
                ...
            try:
                os.remove(f'data/images/{selected_image}.gif')
            except:
                ...

            """–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–∑ —Ä–µ–∫–≤–µ—Å—Ç–æ–≤"""

            # –ë–µ—Ä–µ–º —Ä–µ–∫–≤–µ—Å—Ç—ã, –≥–¥–µ –µ—Å—Ç—å —ç—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞
            all_request_with_image = await database.getRequestsByNameImage(selected_image)

            if all_request_with_image is not None:  # –ï—Å–ª–∏ —Ä–µ–∫–≤–µ—Å—Ç—ã –≤—Å–µ –∂–µ –µ—Å—Ç—å.
                #   –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º
                for request in all_request_with_image:
                    newimages = ''
                    oldimages = request[4]
                    id = request[6]
                    oldimages_split = oldimages.split(', ')
                    oldimages_split.remove(selected_image)
                    for oldimage in oldimages_split:
                        if len(newimages) == 0:
                            newimages = newimages + f'{oldimage}'
                        else:
                            newimages = newimages + f', {oldimage}'

                    await database.updateImagesInRequests(id, newimages)    # –ó–∞–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Ä–µ–∫–≤–µ—Å—Ç–∞

            """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
            embed = nextcord.Embed(
                title=f'–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ/–≥–∏—Ñ–∫–∞ (**{selected_image}**) —É–¥–∞–ª–µ–Ω–æ',
                color=nextcord.Color.green())
            await interaction.edit_original_message(content=f"",
                                                    embed=embed, view=None)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∞


def setup(bot: commands.Bot):
    bot.add_cog(newlistimages(bot))
